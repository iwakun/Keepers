jQuery(document).ready(function() {
	jQuery("#tabs").tabs();
	
	jQuery('[data-component="header"]').each(function() { 
		var header = new components.header(this); 
	});
	jQuery('[data-component="search-box"]').each(function() { 
		var searchBox = new components.searchBox(this); 
	});
	jQuery('[data-component="loop-slide"]').each(function() {
		var ls = new components.loopSlide(this);
	});
});

var components = components || {};

components.header = function(el) {
	var self = this;
	self.el = jQuery(el);
	self.responsiveCurrent = false;
	self.init();
};
components.header.prototype = {
	init: function() {
		var self = this;
		// Desktop
		self.desktop = {};
		self.desktop.el = self.el.find('[data-header-responsive="desktop"]');
		self.desktop.init = function() {
			if(self.el.is('.floating')) {
				jQuery(document).on('scroll.headerDesktop', function() {
					self.desktop.scrollcheck();
				});
				self.desktop.scrollcheck();
			}
			self.desktop.resize();
		};
		self.desktop.destroy = function() {
			jQuery(document).off('.headerDesktop');
		};
		self.desktop.scrollcheck = function() {
			if(jQuery(document).scrollTop() < 260) {
				if(self.desktop.shrunk) {
					self.desktop.grow();
				}
			} else {
				if(!self.desktop.shrunk) {
					self.desktop.shrink();
				}
			}
		};
		self.desktop.shrink = function() {
			self.el.removeClass('floating');
			self.desktop.shrunk = true;
		};
		self.desktop.grow = function() {
			self.el.addClass('floating');
			self.desktop.shrunk = false;
		};
		self.desktop.resize = function() {
			self.desktop.scrollcheck();
		};

		// Mobile
		self.mobile = {};
		self.mobile.el = self.el.find('[data-header-responsive="mobile"]');
		self.mobile.menu = self.mobile.el.find('[data-header-mobile="menu"]');
		self.mobile.trigger = self.mobile.el.find('[data-header-mobile="trigger"]');
		self.mobile.init = function() {
			self.mobile.isOpen = false;
			self.mobile.el.css('opacity', 0);
			self.mobile.menu.css('height', '');
			self.mobile.originalHeight = self.mobile.menu.outerHeight();
			self.mobile.menu.css('height', 0);
			self.mobile.el.css('opacity', 1);
			self.mobile.trigger.on('click.headerMobile', function() {
				if(self.mobile.isOpen) {
					self.mobile.close();
				} else {
					self.mobile.open();
				}
			});
		};
		self.mobile.destroy = function() {
			self.mobile.trigger.off('.headerMobile');
		};
		self.mobile.open = function() {
			self.mobile.menu.css('height', self.mobile.originalHeight);
			self.mobile.trigger.addClass('open');
			self.mobile.isOpen = true;
		},
		self.mobile.close = function() {
			self.mobile.menu.css('height', 0);
			self.mobile.trigger.removeClass('open');
			self.mobile.isOpen = false;
		};

		jQuery(window).on('resize.header', function() {
			self.resize();
		});
		self.resize();
	},
	resize: function() {
		var self = this;
		var ww = jQuery(window).width();
		if(ww < 940) { // Mobile
			if(self.currentResponsive !== 'mobile') {
				self.desktop.el.hide();
				self.desktop.destroy();
				self.mobile.el.show();
				self.mobile.init();
				self.currentResponsive = 'mobile';
			}
		} else { // Desktop
			if(self.currentResponsive !== 'desktop') {
				self.mobile.el.hide();
				self.mobile.destroy();
				self.desktop.el.show();
				self.desktop.init();
				self.currentResponsive = 'desktop';
			}
		}
	}
};
components.searchBox = function(el) {
	var self = this;
	self.el = jQuery(el);
	self.container = self.el.find('[data-sb="container"]');
	self.trigger = self.el.find('[data-sb="trigger"]');
	self.init();
};
components.searchBox.prototype = {
	init: function() {
		var self = this;
		self.originalHeight = self.container.outerHeight();
		setTimeout(function() {
			self.container.height(0);
			self.isOpen = false;
		}, 0);
		setTimeout(function() {
			self.container.css({
				'-webkit-transition': '0.25s height',
				'-moz-transition': '0.25s height',
				'-ms-transition': '0.25s height',
				'transition': '0.25s height',
				'opacity': 1
			});
		}, 100);
		self.trigger.on('click', function() {
			if(self.isOpen) {
				self.close();
			} else {
				self.open();
			}
		});
	},
	open: function() {
		var self = this;
		self.container.height(self.originalHeight);
		self.isOpen = true;
	},
	close: function() {
		var self = this;
		self.container.height(0);
		self.isOpen = false;
	}
};
components.loopSlide = function(el) {
	var self = this;
	self.el = jQuery(el);
	self.currentPage = 1;
	self.viewport = self.el.find('[data-ls="slide-viewport"]');
	self.pages = self.el.find('[data-ls="slide"]');
	self.transitionDuration = 500;
	self.left = self.el.find('[data-ls="left"]');
	self.right = self.el.find('[data-ls="right"]');
	self.init();
};
components.loopSlide.prototype = {
	init: function() {
		var self = this;
		self.pages.not(':eq(' + self.currentPage + ')').hide();
		self.left.on('click', function() {
			var pageNum = (self.currentPage - 1 < 0) ? self.pages.length - 1 : self.currentPage - 1;
			self.slide(pageNum, 'left');
		});
		self.right.on('click', function() {
			var pageNum = (self.currentPage + 1 == self.pages.length) ? 0 : self.currentPage + 1;
			self.slide(pageNum, 'right');
		});
		jQuery(window).on('resize', function() {
			self.resize();
		});
		self.resize();
		self.reset();
	},
	slide: function(pageNum, direction) {
		var self = this;
		var oldPage = self.currentPage;
		var newPage = pageNum;
		if(typeof direction == 'undefined') {
			direction = (oldPage > newPage) ? 'left' : 'right';
		}
		self.currentPage = pageNum;
		var slideWidth = self.pages.eq(oldPage).width();
		if(oldPage == newPage) {
			self.reset();
		} else if(direction == 'left') { // Slide from left
			self.pages.eq(newPage).css('left', slideWidth * -1).show();
			self.pages.eq(oldPage).animate({
				'left': slideWidth
			}, self.transitionDuration, function() { self.reset(); });
			self.pages.eq(newPage).animate({
				'left': 0
			}, self.transitionDuration, function() { self.reset(); });
		} else if(direction == 'right') { // Slide from right
			self.pages.eq(newPage).css('left', slideWidth).show();
			self.pages.eq(oldPage).animate({
				'left': slideWidth * -1
			}, self.transitionDuration, function() { self.reset(); });
			self.pages.eq(newPage).animate({
				'left': 0
			}, self.transitionDuration, function() { self.reset(); });
		}
	},
	reset: function() {
		// Put in the correct text in the buttons
		var self = this;
		var prevPage = (self.currentPage - 1 < 0) ? self.pages.length - 1 : self.currentPage - 1;
		var nextPage = (self.currentPage + 1 == self.pages.length) ? 0 : self.currentPage + 1;
	},
	resize: function() {
		var self = this;
		self.el.find('[data-ls="slide"]').each(function() {
			jQuery(this).css('width', self.el.width());
		});
		var maxHeight = Math.max.apply(null, jQuery('[data-ls="slide"]').map(function() {
			return jQuery(this).outerHeight();
		}));
		self.viewport.css('min-height', maxHeight);
	}
};
