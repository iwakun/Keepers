<?php
class Item_Course extends Item {
    protected function getItemFromDB() {
        $this->item_object = new Course($this->id);
        if(!$this->item_object->id) {
            return false;
        }
        $this->name = $this->item_object->title;
        $this->description = '';
        $this->cost = $this->purchase_option_data['price'];
        return $this;
    }

    public function init($type_code) {
        parent::init($type_code);
        // Courses *must* have a purchase option. If no purchase option, then it's invalid
        if(!isset($this->purchase_option_data)) {
            throw new Exception('No valid item specified');
        } else {
            $this->addPurchaseData('purchase_option', $this->purchase_option_data['id']);
            if($this->purchase_option_data['expiration_length'] != NULL) {
                $expiration_date = date('Y-m-d', strtotime('+ '.$this->purchase_option_data['expiration_length'].' days'));
                $expiration_date .= ' 23:59:59';
                $this->addPurchaseData('expiration_date', $expiration_date);
            }
        }
    }

    public function isPartOfPackage() {
        $coupon = $this->purchase_data['coupon'];
        if(substr($coupon, 0, 8) == 'PACKAGE-') {
            return substr($coupon, 8); // Return
        } else {
            return false;
        }
    }

    public function getCoursePackage() {
        if($package_id = $this->isPartOfPackage()) {
            global $db;
            $sql = "SELECT id FROM user_purchases
                    WHERE
                        type = 'package' AND
                        type_id = ? AND
                        UserID = ?";
            $purchase_id = $db->read($sql, array($package_id, $this->purchase_data['UserID']), GGDB::FETCH_SCALER);
            if($purchase_id) {
                $package = Item::factoryByPurchaseId($purchase_id);
                return $package;
            } else {
                return false;
            }
        } else {
            return false;
        }
    }

    public function canBePurchasedWithVoucher() {
        // Only yearly courses or 90 day courses
        if(
            $this->purchase_option_data['expiration_length'] == 365 ||
            $this->purchase_option_data['expiration_length'] == 90
        ) {
            // No ITAM courses
            if(!in_array($this->id, array(265,264,266))) {
                return true;
            }
        }
        return false;
    }

    public function getStatus() {
        if($this->isPartOfPackage()) {
            $package = $this->getCoursePackage();
            if($package) {
                return $package->getStatus();
            } else {
                return false;
            }
        } else {
            return parent::getStatus();
        }
    }

    public function getCourseType() {
        return $this->purchase_option_data['course_type'];
    }
    public function getCourseTypeSlug() {
        $course_types = Course::getTypes();
        return strtolower($course_types[$this->purchase_option_data['course_type']]['name']);
    }

    public function getSuccessMessage() {
        if($this->purchase_data['status'] == 2) {
            return "You will be able to view your courses once your transaction has been approved";
        } else {
            return false;
        }
    }
}
